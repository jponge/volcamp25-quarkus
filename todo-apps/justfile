start-infra:
 podman run --ulimit memlock=-1:-1 -d -it --rm=true --name=todo-database \
        -e POSTGRES_USER=todos \
        -e POSTGRES_PASSWORD=todos \
        -e POSTGRES_DB=todos \
        -p 5432:5432 postgres:16

stop-infra:
    podman stop todo-database

restart-infra: stop-infra start-infra

start-spring-jvm mem="128m":
    cd todo-app-spring  && java -Xmx{{mem}} -Xms{{mem}} -Dspring.profiles.active=production -jar target/todo-app-spring-1.0-SNAPSHOT.jar

start-spring-native mem="64m":
    cd todo-app-spring  && ./target/todo-app-spring -Xmx{{mem}} -Xms{{mem}} -Dspring.profiles.active=production

start-quarkus-jvm mem="128m":
    cd todo-app-quarkus  && java -Xmx{{mem}} -Xms{{mem}} -jar target/quarkus-app/quarkus-run.jar

start-quarkus-native mem="64m":
    cd todo-app-quarkus  && ./target/todo-app-quarkus-1.0-SNAPSHOT-runner -Xmx{{mem}} -Xms{{mem}}

dev-spring:
    ./mvnw spring-boot:run -f todo-app-spring

dev-quarkus:
    ./mvnw quarkus:dev -f todo-app-quarkus

build-all:
    ./mvnw clean
    just build-quarkus-jvm
    just build-quarkus-native
    just build-spring-jvm
    just build-spring-native
    just build-quarkus-container-jvm
    just build-quarkus-container-native
    just build-spring-container-jvm
    just build-spring-container-native

build-quarkus-native:
    ./mvnw package -Pnative -DskipTests -f todo-app-quarkus

build-spring-native:
    ./mvnw native:compile -Pnative -DskipTests -f todo-app-spring

build-quarkus-jvm:
    ./mvnw package -DskipTests -f todo-app-quarkus

build-spring-jvm:
    ./mvnw package -DskipTests -f todo-app-spring

tell-me-the-diff:
    diff -Naur todo-app-spring/src/main/java todo-app-quarkus/src/main/java

populate host:
    curl -H "Content-Type: application/json" {{host}}/api
    curl -X POST -H "Content-Type: application/json" -d '{"title":"Todo 1"}' {{host}}/api
    curl -X POST -H "Content-Type: application/json" -d '{"title":"Todo 2"}' {{host}}/api
    curl -X POST -H "Content-Type: application/json" -d '{"title":"Todo 3"}' {{host}}/api
    # Add and complete a todo
    curl -s -X POST -H "Content-Type: application/json" -d '{"title":"Todo 5"}' {{host}}/api | jq '.id' | xargs -I {} curl -X PATCH -H "Content-Type: application/json" -d '{"completed":true, "title": "Todo 5"}' {{host}}/api/{}

stress host t="2" c="100" d="10s" timeout="1s":
    jbang wrk@hyperfoil -t{{t}} -c{{c}} -d{{d}} --timeout {{timeout}} {{host}}/api

latency host R="10000" t="2" c="100" d="30s" timeout="1s":
    jbang wrk2@hyperfoil -t{{t}} -c{{c}} -d{{d}} -R {{R}} --timeout {{timeout}} --latency {{host}}/api

build-quarkus-container-native:
    podman build -f Containerfile.quarkus-native -t todo-app/quarkus-native

build-quarkus-container-jvm:
    ./mvnw package -DskipTests -f todo-app-quarkus
    podman build -f Containerfile.quarkus-jvm -t todo-app/quarkus-jvm

build-spring-container-native:
    podman build -f Containerfile.spring-native -t todo-app/spring-native

build-spring-container-jvm:
    ./mvnw package -DskipTests -f todo-app-spring
    podman build -f Containerfile.spring-jvm -t todo-app/spring-jvm

start-quarkus-container-native:
    podman kube play --replace pod-quarkus-native.yaml

stop-quarkus-container-native:
    podman pod rm pod-quarkus-native --force

start-quarkus-container-jvm:
    podman kube play --replace pod-quarkus-jvm.yaml

stop-quarkus-container-jvm:
    podman pod rm pod-quarkus-jvm --force

start-spring-container-native:
    podman kube play --replace pod-spring-native.yaml

stop-spring-container-native:
    podman pod rm pod-spring-native --force

start-spring-container-jvm:
    podman kube play --replace pod-spring-jvm.yaml

stop-spring-container-jvm:
    podman pod rm pod-spring-jvm --force

start-all-pods: start-quarkus-container-jvm start-quarkus-container-native start-spring-container-jvm start-spring-container-native
    @echo ✅ All set!

stop-all-pods: stop-quarkus-container-jvm stop-quarkus-container-native stop-spring-container-jvm stop-spring-container-native
    @echo ✅ All done!

populate-pods:
    just populate http://localhost:63000
    just populate http://localhost:63001
    just populate http://localhost:58000
    just populate http://localhost:58001
